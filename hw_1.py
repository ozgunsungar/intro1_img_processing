# -*- coding: utf-8 -*-
"""HW_1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1i5lDRithCpKk03GUVqaDBMH6SbJl1nxg
"""

import cv2
import numpy as np
import math

!wget -O image.png https://raw.githubusercontent.com/ozgunsungar/Corner-Edge_Detection/main/image.png

image = cv2.imread("image.png",0)

h,w = image.shape
print(h,w)

"""## flips image vertically"""

image_copy = np.copy(image)
row = 0
for i in range(h-1,-1,-1):
  image_copy[row,:] = image[i,:]
  row+=1

cv2.imwrite("vertical_flips.png",image_copy)

"""## flips image horizontally"""

image_copy = np.copy(image)
col = 0
for i in range(w-1,-1,-1):
  image_copy[:,col] = image[:,i]
  col+=1

cv2.imwrite("horizontal_flips.png",image_copy)

"""## rotates the image 90 deg counterclockwise"""

img_zeros = np.zeros((w,h))
row = 0
for i in range(0,w):
  img_zeros[row,:] = image[:,-i]
  row+=1
img_counterclockwise = np.copy(img_zeros)
cv2.imwrite("image_counterclockwise.png",img_counterclockwise)

"""## rotates the image 90 deg clockwise

"""

img_zeros = np.zeros((w,h))
col = 0
for i in range(0,h-1):
  img_zeros[:,col] = image[-i,:]
  col+=1
img_clockwise = np.copy(img_zeros)
cv2.imwrite("image_clockwise.png",img_clockwise)

"""## resizes the image to the half by keeping the aspect ratio

"""

rezied_image = image[0::2,0::2]
cv2.imwrite("rezied_image.png",rezied_image)
print(image.shape)
print(rezied_image.shape)

"""## applies negative transformation on the image"""

negative_image = np.ones((h,w))*255
negative_image = negative_image-image

cv2.imwrite("negative_image.png",negative_image)

"""## applies gamma transformation on the image"""

# compute gamma = log(mid*255)/log(mean)
mid = 0.4
mean = np.mean(image)
gamma = math.log(mid*255)/math.log(mean)

# do gamma correction
image_gamma = np.power(image, gamma).clip(0,255).astype(np.uint8)
cv2.imwrite("image_gamma.png",image_gamma)

"""## computes the histogram of the image"""

